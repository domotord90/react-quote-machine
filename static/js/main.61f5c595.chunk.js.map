{"version":3,"sources":["QuoteBox.js","App.js","index.js"],"names":["QuoteBox","props","newQuote","rndNumber","Math","floor","random","setState","text","state","quotes","content","author","play","axios","get","response","this","data","results","id","className","onClick","target","rel","href","icon","faTwitterSquare","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yUA2DeA,E,YAnDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRC,SAAW,WACT,IAAMC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClC,EAAKC,SAAS,CACZC,KAAM,EAAKC,MAAMC,OAAOP,GAAWQ,QACnCC,OAAQ,EAAKH,MAAMC,OAAOP,GAAWS,UAtBvC,EAAKH,MAAQ,CACXC,OAAQ,GACRF,KAAM,GACNI,OAAQ,GACRC,MAAM,GANS,E,iNAWMC,IAAMC,IAAI,2C,OAA3BC,E,OACAb,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClCW,KAAKV,SAAS,CAAEG,OAAQM,EAASE,KAAKC,UACtCF,KAAKV,SAAS,CACZC,KAAMS,KAAKR,MAAMC,OAAOP,GAAWQ,QACnCC,OAAQK,KAAKR,MAAMC,OAAOP,GAAWS,S,mIAavC,OACE,yBAAKQ,GAAG,aACN,kBAAC,kBAAD,CAAiBC,UAAU,mBACzB,uBAAGD,GAAG,QAAQH,KAAKR,MAAMD,MACzB,uBAAGY,GAAG,UAAUH,KAAKR,MAAMG,SAE7B,4BAAQQ,GAAG,YAAYE,QAASL,KAAKf,UAArC,aAGA,uBACEqB,OAAO,SACPC,IAAI,sBACJJ,GAAG,cACHK,KAAK,wCAEL,kBAAC,IAAD,CAAiBC,KAAMC,IAAiBN,UAAU,kB,GA7CrCO,IAAMC,WCCdC,E,iLAHX,OAAO,kBAAC,EAAD,U,GAFOF,IAAMC,W,MCExBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.61f5c595.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuoteBox.css\";\r\nimport { AnimateOnChange } from \"react-animation\";\r\nimport { faTwitterSquare } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass QuoteBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: [],\r\n      text: \"\",\r\n      author: \"\",\r\n      play: true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\"https://api.quotable.io/quotes?limit=50\");\r\n    const rndNumber = Math.floor(Math.random() * 50);\r\n    this.setState({ quotes: response.data.results });\r\n    this.setState({\r\n      text: this.state.quotes[rndNumber].content,\r\n      author: this.state.quotes[rndNumber].author\r\n    });\r\n  }\r\n\r\n  newQuote = () => {\r\n    const rndNumber = Math.floor(Math.random() * 50);\r\n    this.setState({\r\n      text: this.state.quotes[rndNumber].content,\r\n      author: this.state.quotes[rndNumber].author\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"quote-box\">\r\n        <AnimateOnChange className=\"quote-container\">\r\n          <p id=\"text\">{this.state.text}</p>\r\n          <p id=\"author\">{this.state.author}</p>\r\n        </AnimateOnChange>\r\n        <button id=\"new-quote\" onClick={this.newQuote}>\r\n          New Quote\r\n        </button>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          id=\"tweet-quote\"\r\n          href=\"https://www.twitter.com/intent/tweet\"\r\n        >\r\n          <FontAwesomeIcon icon={faTwitterSquare} className=\"twitter\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBox;\r\n","import React from \"react\";\r\nimport QuoteBox from \"./QuoteBox\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <QuoteBox />;\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}